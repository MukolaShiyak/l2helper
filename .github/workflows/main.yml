# on:
#     push:
#       branches:
#         - main
#         - master
  
# name: Test, Build and Release apk
  
# jobs:
#     build:
#       name: Build APK
#       runs-on: macos-latest
#       steps:
#       - uses: actions/checkout@v1
#       - uses: actions/setup-java@v1
#         with:
#           java-version: '17.x'
#       - uses: subosito/flutter-action@v1
#         with:
#           flutter-version: '3.22.2'
#       - run: flutter pub get
#       - run: flutter build apk --release --split-per-abi
  
#       # Create a new tag before pushing the APK to release
#       - name: Create Tag
#         run: |
#           git tag v1.0.0
#           git push origin v1.0.0
  
#       # Push APK to GitHub releases
#       - name: Push APK to Releases
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/apk/release/*.apk"
#           token: ${{ secrets.TOKEN }}
#           tag: v1.0.0
  
on:
    push:
      branches:
        - main
        - master
  
name: Test, Build and Release apk
  
jobs:
    build:
      name: Build APK
      runs-on: macos-latest
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.22.2'
  
      # Створення і збереження key.jks файлу з секрету
      - name: Decode and save keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/craft_helper_key.jks
  
      # Створення key.properties файлу
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=${{ secrets.KEY_STOREFILE }}" >> android/key.properties
  
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi
  
      # Create a new tag before pushing the APK to release
      - name: Create Tag
        run: |
          git tag v1.0.0
          git push origin v1.0.0
  
      # Push APK to GitHub releases
      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.TOKEN }}
          tag: v1.0.0
  